<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddToOrder" xml:space="preserve">
    <value>Add to order</value>
  </data>
  <data name="Administration" xml:space="preserve">
    <value>Administrate</value>
  </data>
  <data name="Agent" xml:space="preserve">
    <value>Agent</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="BankTransfer" xml:space="preserve">
    <value>Bank transfer</value>
  </data>
  <data name="BDT" xml:space="preserve">
    <value>৳</value>
  </data>
  <data name="Bkash" xml:space="preserve">
    <value>Bkash</value>
  </data>
  <data name="CareOf" xml:space="preserve">
    <value>Care of (optional)</value>
  </data>
  <data name="CashOnDelivery" xml:space="preserve">
    <value>Cash on delivery</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ClearOrder" xml:space="preserve">
    <value>Clear order</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ContactInformation" xml:space="preserve">
    <value>Contact Information</value>
  </data>
  <data name="ContactRepresentative" xml:space="preserve">
    <value>Contact the representative</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="CreditCard" xml:space="preserve">
    <value>Credit card</value>
  </data>
  <data name="DeliveryMethod" xml:space="preserve">
    <value>Delivery method</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DHL" xml:space="preserve">
    <value>DHL</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="DownloadInvoice" xml:space="preserve">
    <value>Download invoice</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FilterOnSelector" xml:space="preserve">
    <value>Filter on selector</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="HomeDelivery" xml:space="preserve">
    <value>Home delivery</value>
  </data>
  <data name="InactiveSessionExpire" xml:space="preserve">
    <value>You have been logged out due to inactivity. Please sign in again.</value>
  </data>
  <data name="InformationNotFound" xml:space="preserve">
    <value>Information not found</value>
  </data>
  <data name="Inventory" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MyOrder" xml:space="preserve">
    <value>My order</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Nothing" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="NumberOfItems" xml:space="preserve">
    <value>Number of items</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderEmptyMessage" xml:space="preserve">
    <value>No items currently on order cart</value>
  </data>
  <data name="OrdersList" xml:space="preserve">
    <value>Orders list</value>
  </data>
  <data name="OrdersPrice" xml:space="preserve">
    <value>Payable price</value>
  </data>
  <data name="OutOfStock" xml:space="preserve">
    <value>Out of stock</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password required</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="PaymentMethod" xml:space="preserve">
    <value>Payment methods</value>
  </data>
  <data name="PaymentReferenceMessage" xml:space="preserve">
    <value>Note: Once you place an order then you will get an order reference. If you want to pay you must have to include the order reference in your payment reference.</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PlaceOrder" xml:space="preserve">
    <value>Place order</value>
  </data>
  <data name="PlaceOrderSuccess" xml:space="preserve">
    <value>Your order have been placed successfully. Your order reference is </value>
  </data>
  <data name="PostCode" xml:space="preserve">
    <value>Post code</value>
  </data>
  <data name="PostOffice" xml:space="preserve">
    <value>Post office</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="PriceIclVat" xml:space="preserve">
    <value>Price icl. vat</value>
  </data>
  <data name="ProductDetail" xml:space="preserve">
    <value>Product detail</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Rocket" xml:space="preserve">
    <value>Rocket</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SessionExpired" xml:space="preserve">
    <value>Session expired</value>
  </data>
  <data name="ShippingAddress" xml:space="preserve">
    <value>Shipping address</value>
  </data>
  <data name="ShippingAndBilling" xml:space="preserve">
    <value>Shipping and billing</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignInMessage" xml:space="preserve">
    <value>Sign in to get access  to our service and orders.</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="Specification" xml:space="preserve">
    <value>Specification</value>
  </data>
  <data name="StartPage" xml:space="preserve">
    <value>Start page</value>
  </data>
  <data name="StockInformation" xml:space="preserve">
    <value>{0} in stock</value>
  </data>
  <data name="SubCatagories" xml:space="preserve">
    <value>Sub catagories</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="SundarbanExpress" xml:space="preserve">
    <value>Sundarban express</value>
  </data>
  <data name="TotalDiscount" xml:space="preserve">
    <value>Total discount</value>
  </data>
  <data name="TotalPriceInclVat" xml:space="preserve">
    <value>Total price incl VAT</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit price (incl vat)</value>
  </data>
  <data name="UserActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="UserCompany" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="UserList" xml:space="preserve">
    <value>User list</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>User name required</value>
  </data>
  <data name="UserRole" xml:space="preserve">
    <value>User role</value>
  </data>
  <data name="Videos" xml:space="preserve">
    <value>Videos</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>View all</value>
  </data>
  <data name="ViewEmail" xml:space="preserve">
    <value>View email</value>
  </data>
  <data name="ViewPhone" xml:space="preserve">
    <value>View phone number</value>
  </data>
</root>