@using MultivendorWebViewer.ViewModels;
@using MultivendorWebViewer.Common;
@using MultivendorWebViewer.Models;
@model OrderViewModel

@{
    var applicationrequestContext = ApplicationRequestContext.GetContext(Context);
    //var totalPrice = Model.OrderLines.Sum(p => p.PriceAvailability == null ? 0 : p.PriceAvailability.PriceInclVat.Value * p.Quantity);
    //var priceAvailability = new PriceAvailailityViewModel(new PriceAvailability(), applicationrequestContext);
    //var formattedTotal = priceAvailability.GetPriceText(totalPrice);
    //var totalDiscount = Model.OrderLines.Sum(p => p== null|| p.PriceAvailability == null ? 0 : p.PriceAvailability.Discount.Value * p.Quantity);
    //var formattedDiscount = priceAvailability.GetPriceText(totalDiscount);
    //var amountToPay = totalPrice - totalDiscount;
    //var formattedAmountToPay = priceAvailability.GetPriceText(amountToPay);
    var orderProcess = applicationrequestContext.Configuration.SiteProfile.OrderProcess;
}
@if (Model != null && Model.OrderLines.Any())
{
        <div class="order-table-item header-column">
            <div class="order-detail"><h4>@CustomStrings.ProductDetail</h4></div>
            <div class="order-unit-price"><h4>@CustomStrings.UnitPrice</h4></div>
            <div class="order-quantity"><h4>@CustomStrings.Quantity</h4></div>
            <div class="delete-icon"><h4></h4></div>
        </div>

        <div class="order-table-items-container">
            @foreach (var item in Model.OrderLines)
            {
                var product = item.Product;
                var highlightedSpecification = product.Specifications.Where(p => p.SpecificationMode == SpecificationMode.Highlighted);
                <div class="order-table-item" data-product-id="@product.Id">
                    <div class="details-container order-item">
                        <a class="order-information-container" href="@product.GetUrl()">
                            <div class="image-container">
                                @if (product.Images != null && product.Images.Where(p => p.ImageMode == ImageMode.Thumbnail).Count() > 0)
                                {
                                    //Show Images
                                    var itemImage = product.Images.Where(p => p.ImageMode == ImageMode.Thumbnail).FirstOrDefault();
                                    <img class="order-image" src="@itemImage.GetThumbnailUrl()">
                                }
                            </div>
                            <div class="information">
                                <div class="name"><h4>@product.FormattedName</h4></div>
                                @if (highlightedSpecification.Any())
                                {
                                    <div class="specifications">
                                        @foreach (var specification in highlightedSpecification)
                                        {
                                            <div class="sp">
                                                <label>@specification.SpecificationType.FormattedName</label>
                                                <span>@specification.FormattedName</span>
                                            </div>
                                        }

                                    </div>
                                }
                            </div>
                        </a>


                    </div>
                    @if (item.PriceAvailability != null)
                    {
                        var price = item.PriceAvailability;
                        <div class="unit-price-container">
                            <div class="price-incl-vat">
                                <span>@price.FormattedPriceInclVat</span>
                            </div>
                        </div>
                    }
                    <div class="multivendor-quantity">
                        <input class="order-cart-quantity add-qty" max="1000" min="1" type="text" value="@item.Quantity">
                        <span class="increase"></span><span class="decrease"></span>
                    </div>
                    <div class="delete-order order-item">
                        <span class="icon fa delete-icon fa-trash  fa-2x"></span>
                    </div>
                </div>
            }

        </div>
}
