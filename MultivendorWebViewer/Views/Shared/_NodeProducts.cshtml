@using MultivendorWebViewer.Helpers;
@using MultivendorWebViewer.ViewModels;
@using MultivendorWebViewer.Components;
@model DataViewString<ProductViewModel>
@{
    var items = Model.VisibleItems;
}
            <div class="node-container product-nodes">
                @foreach (var item in items)
                {
                <div class="node-view ">
                    <a class="image-container" href="@item.GetUrl()">
                        @if (item.Images != null && item.Images.Where(p => p.ImageMode == ImageMode.Thumbnail).Count() > 0)
                        {

                            var itemImage = item.Images.Where(p => p.ImageMode == ImageMode.Thumbnail).FirstOrDefault();
                            <img class="presentation-image" src="@itemImage.GetThumbnailUrl()">
                        }
                    </a>
                    @if (!string.IsNullOrEmpty(item.FormattedName))
                    {
                        <a class="name-container" href="@item.GetUrl()">
                            <label class="node-name">@item.FormattedName</label>
                        </a>
                    }

                    @if (!string.IsNullOrEmpty(item.FormattedDescription))
                    {
                        <a class="description-container" href="@item.GetUrl()">
                            <span class="node-description">@item.FormattedDescription</span>
                        </a>
                    }
                    @if (item.Specifications != null)
                    {
                        var highlightedSpecification = item.Specifications.Where(p => p.SpecificationMode == SpecificationMode.Highlighted);
                        if (highlightedSpecification != null && highlightedSpecification.Any())
                        {
                            <a class="highlighted-specification specifications" href="@item.GetUrl()">
                                @foreach (var specification in highlightedSpecification)
                                {

                                    <div class="sp">
                                        <label>@specification.SpecificationType.FormattedName</label>
                                        <span>@specification.FormattedName</span>
                                    </div>

                                }
                            </a>
                        }

                    }
                    @Html.AsyncView(Url.Action("GetOrderInformation", "Product", routeValues: new { productId = item.Id }), insertMethod: HtmlInsertMethod.Html, htmlAttributes: new AttributeBuilder("node-order")@*,loadDelay:10*@);
                   @* @Html.Action("GetOrderInformation", "Product", routeValues: new { productId = item.Id })*@
                </div>
                }
            </div>
        @*</div>*@
        @*<div class="data-view-content-footer"></div>
    </div>*@