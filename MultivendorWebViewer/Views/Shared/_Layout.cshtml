@using MultivendorWebViewer;
@using MultivendorWebViewer.Common;
@using MultivendorWebViewer.Helpers;
@using MultivendorWebViewer.ViewModels;
@using MultivendorWebViewer.Components;

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@{@Html.Raw(@ViewBag.Title ?? "Multivendor Web")} </title>
    @Styles.Render("~/Content/Presentation")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/helpers")
    @Scripts.Render("~/bundles/main")
    @Scripts.Render("~/bundles/order")
</head>
@{
    var applicationrequestContext = ApplicationRequestContext.GetContext(Context);
    var user = applicationrequestContext.User;
}
<body data-order-total-counter="@UrlUtility.Action(applicationrequestContext, "GetTotalQuantity", "Order")"
      data-quick-search-url="@UrlUtility.Action(applicationrequestContext, "Search", "Search")">
    <section class="main-layout">
        <div class="main-toolbar">
            <div class="header-toolbar">

                <ul class="multivendor-web-toolbar">
                    <li class="Container multivendor-web-logo">

                        @{
                            var headerLogoUrl = applicationrequestContext.Configuration.GetHeaderLogoUrl(applicationrequestContext, false);
                            var smallHeaderLogoUrl = applicationrequestContext.Configuration.GetHeaderLogoUrl(applicationrequestContext, true);
                            var routeValues = new { id = applicationrequestContext.Configuration.SiteProfile.StartCatalogueId };
                            var startCatalogueUrl = UrlUtility.Action(applicationrequestContext, "Index", "Category", routeValues);
                            var flagUrl = applicationrequestContext.Configuration.GetCountryFlagUrlByCulture(applicationrequestContext.SelectedCulture);
                            var contentUrl = @Url.Content(flagUrl);
                        }
                        <a class="header-logo" href="@startCatalogueUrl">

                            <img class="img logo-image" src="@headerLogoUrl">
                            <img class="img logo-image-small" src="@smallHeaderLogoUrl">
                        </a>

                    </li>
                    <li class="Container search-container">
                        <div class="quick-search-input" data-min-search="2">
                            <input class="key-text search-input" type="search" placeholder="@CustomStrings.Search" tabindex="5" autocomplete="xyz">
                            <a class="toolbar-search-icon">
                                @Html.Icon(Icons.Search, new { @class = "content" })

                            </a>
                        </div>


                    </li>
                    <li class="container right-aligned language-container" data-language-item-url="@UrlUtility.Action(applicationrequestContext, "GetLanguagePopUp", "Home")">
                        <img class="img-icon" src="@contentUrl">
                    </li>
                    <li class="container right-aligned">

                        <a class="order-cart-container item-container" href="@UrlUtility.Action(applicationrequestContext, "Index", "Order")">
                            @Html.Icon(Icons.ShoppingCart, new { @class = "content" })
                            @*<label class="icon-label">@CustomStrings.Order</label>*@
                            <div class="overlay">
                                <span class="total-qty"></span>
                            </div>
                        </a>
                    </li>
                    <li class="container avatar-menu right-aligned user-menu" data-user-menu-url="@UrlUtility.Action(applicationrequestContext, "GetUserMenuPopUp", "Home")">
                        <! -- User-->
                        <div class="item-container">
                            @{

                            }
                            @if (user == null)
                            {
                                @Html.Icon(Icons.User, new { @class = "content" })

                            }
                            else
                            {
                                var userViewModel = new UserViewModel(user, applicationrequestContext);
                                if (userViewModel.Image == null)
                                {

                                    @Html.Icon(Icons.User, new { @class = "content" })
                                }
                                else
                                {
                                    @Html.Image(userViewModel.Image, height: 50, width: 50, htmlAttributes: new { @class = "user-logged-in-image" });
                                }
                            }
                            @*<label class="icon-label user-label ">@(user== null?CustomStrings.Menu: user.UserName)</label>*@
                        </div>
                    </li>
                </ul>

            </div>
            <div class="items-toolbar menu-toolbar">

            </div>

        </div>
        <div class="main-search-pane">

        </div>
        <!-- #Render your view inside main body through controller-->
        <main class="main-body">
            @RenderBody()

        </main>
        <!-- #Render your view inside main body-->
        @*<footer class="main-footer">
                <div class="footer-container">
                    <span>©2022 Digital halal market Ltd.</span>
                    <ul class="multivendor-web-toolbar footer-toolbar">

                        <li class="container center-aligned return-policy">
                            <label><a href="@UrlUtility.Action(applicationrequestContext, "ContactUs", "Order")">Return policy</a></label>
                        </li>
                        <li class=" container center-aligned contact-us">
                            <label><a href="@UrlUtility.Action(applicationrequestContext, "ContactUs", "Order")">Contact</a></label>
                        </li>
                        <li class=" container center-aligned about-us">
                            <label><a href="@UrlUtility.Action(applicationrequestContext, "AboutUs", "Order")">About us</a></label>
                        </li>

                    </ul>
                </div>


            </footer>*@
    </section>

    @Styles.Render("~/Content/Media")
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)*@
</body>
</html>
