@using MultivendorWebViewer.ViewModels;
@using MultivendorWebViewer.Common;
@using MultivendorWebViewer.Helpers;
@model NodeViewModel

@{
    ViewBag.Title = "Multivendor Web";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="presentation node-view-container">
    <div class="navigation-bar">
        @Html.Action("NavigationBar", "NavigationPath", new { nodeId = Model.Id })
    </div>
    @*Show header*@


    <div class="presentation-header sub-node">
        @if (Model != null && Model.Images != null && Model.Images.Count() > 0)
        {
            //Show Images
            var image = Model.Images.Where(i => i.ImageMode == ImageMode.Original).FirstOrDefault();
            if (image != null)
            {
                <img class="presentation-image" src="@image.GetUrl()">

            }

        }
        <div class="presentation-information-container">
            @if (Model != null && !string.IsNullOrEmpty(Model.FormattedName))
            {
                //Show
                <label class="presentation-name">@Model.FormattedName</label>
            }
            @if (Model != null && !string.IsNullOrEmpty(Model.FormattedDescription))
            {
                //Show
                <span class="presentation-description">@Model.FormattedDescription</span>
            }
        </div>
    </div>
    <div class="main-body-contents">
        <div class="presentation-body node">
            @if (Model != null && Model.SubNodes != null && Model.SubNodes.Count() > 0)
            {
                <div class="node-container sub-node">
                    @foreach (var item in Model.SubNodes.OrderBy(p => p.SequenceNumber))
                    {
                        <a class="node-view " href="@item.GetUrl()">
                            @*<div class="image-container">*@
                            @if (item.Images != null && item.Images.Where(p => p.ImageMode == ImageMode.Thumbnail).Count() > 0)
                            {
                                var itemImage = item.Images.Where(p => p.ImageMode == ImageMode.Thumbnail).FirstOrDefault();
                                @Html.Image(itemImage, height: 225, width: 300);
                            }
                            @*</div>*@

                            @if (!string.IsNullOrEmpty(item.FormattedName))
                            {
                                <div class="name-container">
                                    <label class="node-name">@item.FormattedName</label>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(item.FormattedDescription))
                            {
                                <div class="description-container">
                                    <span class="node-description">@item.FormattedDescription</span>
                                </div>
                            }

                        </a>
                    }
                </div>

            }
            @if (Model != null && Model.Products != null && Model.Products.Count() > 0)
            {
                @Html.DataView(new DataViewOptions { Url = @Url.Action("NodeProductsDataView", "Product", new { nodeId = Model.Id}) }, htmlAttributes: new { @class = "node-product-data-view" })

            }
        </div>
    </div>
</div>
